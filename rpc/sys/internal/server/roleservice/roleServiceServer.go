// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: sys.proto

package server

import (
	"context"

	"ordering-platform/rpc/sys/internal/logic/roleservice"
	"ordering-platform/rpc/sys/internal/svc"
	"ordering-platform/rpc/sys/sysclient"
)

type RoleServiceServer struct {
	svcCtx *svc.ServiceContext
	sysclient.UnimplementedRoleServiceServer
}

func NewRoleServiceServer(svcCtx *svc.ServiceContext) *RoleServiceServer {
	return &RoleServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServiceServer) RoleAdd(ctx context.Context, in *sysclient.RoleAddReq) (*sysclient.RoleAddResp, error) {
	l := roleservicelogic.NewRoleAddLogic(ctx, s.svcCtx)
	return l.RoleAdd(in)
}

func (s *RoleServiceServer) RoleUpdate(ctx context.Context, in *sysclient.RoleUpdateReq) (*sysclient.RoleUpdateResp, error) {
	l := roleservicelogic.NewRoleUpdateLogic(ctx, s.svcCtx)
	return l.RoleUpdate(in)
}

func (s *RoleServiceServer) RoleDelete(ctx context.Context, in *sysclient.RoleDeleteReq) (*sysclient.RoleDeleteResp, error) {
	l := roleservicelogic.NewRoleDeleteLogic(ctx, s.svcCtx)
	return l.RoleDelete(in)
}

func (s *RoleServiceServer) RoleInfo(ctx context.Context, in *sysclient.RoleInfoReq) (*sysclient.RoleInfoResp, error) {
	l := roleservicelogic.NewRoleInfoLogic(ctx, s.svcCtx)
	return l.RoleInfo(in)
}

func (s *RoleServiceServer) RoleList(ctx context.Context, in *sysclient.RoleListReq) (*sysclient.RoleListResp, error) {
	l := roleservicelogic.NewRoleListLogic(ctx, s.svcCtx)
	return l.RoleList(in)
}
