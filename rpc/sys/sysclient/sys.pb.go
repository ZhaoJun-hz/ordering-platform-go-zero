// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: rpc/sys/sys.proto

package sysclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitApiRouteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle string `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"` // 方法名
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`   // 方法描述
	Path   string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`     // 请求路径
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`     // 类型 1 系统 2 业务
	Action string `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"` // 请求方式
}

func (x *InitApiRouteData) Reset() {
	*x = InitApiRouteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitApiRouteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitApiRouteData) ProtoMessage() {}

func (x *InitApiRouteData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitApiRouteData.ProtoReflect.Descriptor instead.
func (*InitApiRouteData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{0}
}

func (x *InitApiRouteData) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *InitApiRouteData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InitApiRouteData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InitApiRouteData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InitApiRouteData) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type InitApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*InitApiRouteData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *InitApiReq) Reset() {
	*x = InitApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitApiReq) ProtoMessage() {}

func (x *InitApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitApiReq.ProtoReflect.Descriptor instead.
func (*InitApiReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{1}
}

func (x *InitApiReq) GetList() []*InitApiRouteData {
	if x != nil {
		return x.List
	}
	return nil
}

type InitApiResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitApiResp) Reset() {
	*x = InitApiResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitApiResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitApiResp) ProtoMessage() {}

func (x *InitApiResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitApiResp.ProtoReflect.Descriptor instead.
func (*InitApiResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{2}
}

type ApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Handle     string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`         // 方法名
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`           // 方法描述
	Path       string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`             // 请求路径
	Type       string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`             // 类型 1 系统 2 业务
	Action     string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`         // 请求方式
	CreateTime string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
}

func (x *ApiInfo) Reset() {
	*x = ApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfo) ProtoMessage() {}

func (x *ApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfo.ProtoReflect.Descriptor instead.
func (*ApiInfo) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{3}
}

func (x *ApiInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiInfo) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ApiInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApiInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApiInfo) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ApiInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type ApiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                          // 系统 业务
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`                      // 请求方法 GET POST DELETE PUT
	PageNum  int64  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    //  第几页
	PageSize int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页的数量
}

func (x *ApiListReq) Reset() {
	*x = ApiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiListReq) ProtoMessage() {}

func (x *ApiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiListReq.ProtoReflect.Descriptor instead.
func (*ApiListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{4}
}

func (x *ApiListReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApiListReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ApiListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ApiListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ApiListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64      `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*ApiInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ApiListResp) Reset() {
	*x = ApiListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiListResp) ProtoMessage() {}

func (x *ApiListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiListResp.ProtoReflect.Descriptor instead.
func (*ApiListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{5}
}

func (x *ApiListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ApiListResp) GetData() []*ApiInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeptAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentDeptId int64  `protobuf:"varint,1,opt,name=parentDeptId,proto3" json:"parentDeptId,omitempty"`
	DeptName     string `protobuf:"bytes,2,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort         int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader       string `protobuf:"bytes,4,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone        string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email        string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Status       int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeptAddReq) Reset() {
	*x = DeptAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptAddReq) ProtoMessage() {}

func (x *DeptAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptAddReq.ProtoReflect.Descriptor instead.
func (*DeptAddReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{6}
}

func (x *DeptAddReq) GetParentDeptId() int64 {
	if x != nil {
		return x.ParentDeptId
	}
	return 0
}

func (x *DeptAddReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptAddReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptAddReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptAddReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptAddReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptAddReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeptAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptAddResp) Reset() {
	*x = DeptAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptAddResp) ProtoMessage() {}

func (x *DeptAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptAddResp.ProtoReflect.Descriptor instead.
func (*DeptAddResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{7}
}

type DeptUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId       int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentDeptId int64  `protobuf:"varint,2,opt,name=parentDeptId,proto3" json:"parentDeptId,omitempty"`
	DeptName     string `protobuf:"bytes,3,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort         int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader       string `protobuf:"bytes,5,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeptUpdateReq) Reset() {
	*x = DeptUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUpdateReq) ProtoMessage() {}

func (x *DeptUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUpdateReq.ProtoReflect.Descriptor instead.
func (*DeptUpdateReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{8}
}

func (x *DeptUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *DeptUpdateReq) GetParentDeptId() int64 {
	if x != nil {
		return x.ParentDeptId
	}
	return 0
}

func (x *DeptUpdateReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptUpdateReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptUpdateReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptUpdateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeptUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptUpdateResp) Reset() {
	*x = DeptUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUpdateResp) ProtoMessage() {}

func (x *DeptUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUpdateResp.ProtoReflect.Descriptor instead.
func (*DeptUpdateResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{9}
}

type DeptDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId int64 `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *DeptDeleteReq) Reset() {
	*x = DeptDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDeleteReq) ProtoMessage() {}

func (x *DeptDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDeleteReq.ProtoReflect.Descriptor instead.
func (*DeptDeleteReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{10}
}

func (x *DeptDeleteReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

type DeptDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptDeleteResp) Reset() {
	*x = DeptDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDeleteResp) ProtoMessage() {}

func (x *DeptDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDeleteResp.ProtoReflect.Descriptor instead.
func (*DeptDeleteResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{11}
}

type DeptInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId int64 `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *DeptInfoReq) Reset() {
	*x = DeptInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfoReq) ProtoMessage() {}

func (x *DeptInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfoReq.ProtoReflect.Descriptor instead.
func (*DeptInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{12}
}

func (x *DeptInfoReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

type DeptInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId       int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentDeptId int64  `protobuf:"varint,2,opt,name=parentDeptId,proto3" json:"parentDeptId,omitempty"`
	DeptName     string `protobuf:"bytes,3,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort         int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader       string `protobuf:"bytes,5,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime   string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *DeptInfoResp) Reset() {
	*x = DeptInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfoResp) ProtoMessage() {}

func (x *DeptInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfoResp.ProtoReflect.Descriptor instead.
func (*DeptInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{13}
}

func (x *DeptInfoResp) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *DeptInfoResp) GetParentDeptId() int64 {
	if x != nil {
		return x.ParentDeptId
	}
	return 0
}

func (x *DeptInfoResp) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptInfoResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptInfoResp) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptInfoResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptInfoResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptInfoResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptInfoResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type DeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptListReq) Reset() {
	*x = DeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListReq) ProtoMessage() {}

func (x *DeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListReq.ProtoReflect.Descriptor instead.
func (*DeptListReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{14}
}

type DeptListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId       int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentDeptId int64  `protobuf:"varint,2,opt,name=parentDeptId,proto3" json:"parentDeptId,omitempty"`
	DeptName     string `protobuf:"bytes,3,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort         int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader       string `protobuf:"bytes,5,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime   string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *DeptListData) Reset() {
	*x = DeptListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListData) ProtoMessage() {}

func (x *DeptListData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListData.ProtoReflect.Descriptor instead.
func (*DeptListData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{15}
}

func (x *DeptListData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *DeptListData) GetParentDeptId() int64 {
	if x != nil {
		return x.ParentDeptId
	}
	return 0
}

func (x *DeptListData) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptListData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptListData) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptListData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type DeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeptListData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeptListResp) Reset() {
	*x = DeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListResp) ProtoMessage() {}

func (x *DeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListResp.ProtoReflect.Descriptor instead.
func (*DeptListResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{16}
}

func (x *DeptListResp) GetData() []*DeptListData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 添加菜单信息表
type AddMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuType        string  `protobuf:"bytes,1,opt,name=menuType,proto3" json:"menuType,omitempty"`
	Title           string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Sort            int32   `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
	ParentMenuId    int64   `protobuf:"varint,4,opt,name=parentMenuId,proto3" json:"parentMenuId,omitempty"`
	Icon            string  `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Name            string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Component       string  `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`
	Path            string  `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	Permission      string  `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	HideInMenu      bool    `protobuf:"varint,10,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	IgnoreKeepAlive bool    `protobuf:"varint,11,opt,name=ignoreKeepAlive,proto3" json:"ignoreKeepAlive,omitempty"`
	LinkFlag        bool    `protobuf:"varint,12,opt,name=linkFlag,proto3" json:"linkFlag,omitempty"`
	Link            string  `protobuf:"bytes,13,opt,name=link,proto3" json:"link,omitempty"`
	Disabled        bool    `protobuf:"varint,14,opt,name=disabled,proto3" json:"disabled,omitempty"`
	SelectApi       []int64 `protobuf:"varint,15,rep,packed,name=selectApi,proto3" json:"selectApi,omitempty"`
}

func (x *AddMenuReq) Reset() {
	*x = AddMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuReq) ProtoMessage() {}

func (x *AddMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuReq.ProtoReflect.Descriptor instead.
func (*AddMenuReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{17}
}

func (x *AddMenuReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *AddMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddMenuReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddMenuReq) GetParentMenuId() int64 {
	if x != nil {
		return x.ParentMenuId
	}
	return 0
}

func (x *AddMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AddMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *AddMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddMenuReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *AddMenuReq) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *AddMenuReq) GetIgnoreKeepAlive() bool {
	if x != nil {
		return x.IgnoreKeepAlive
	}
	return false
}

func (x *AddMenuReq) GetLinkFlag() bool {
	if x != nil {
		return x.LinkFlag
	}
	return false
}

func (x *AddMenuReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *AddMenuReq) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AddMenuReq) GetSelectApi() []int64 {
	if x != nil {
		return x.SelectApi
	}
	return nil
}

type AddMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMenuResp) Reset() {
	*x = AddMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuResp) ProtoMessage() {}

func (x *AddMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuResp.ProtoReflect.Descriptor instead.
func (*AddMenuResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{18}
}

type UpdateMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId          int64   `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuType        string  `protobuf:"bytes,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	Title           string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Sort            int32   `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	ParentMenuId    int64   `protobuf:"varint,5,opt,name=parentMenuId,proto3" json:"parentMenuId,omitempty"`
	Icon            string  `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Name            string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Component       string  `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	Path            string  `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	Permission      string  `protobuf:"bytes,10,opt,name=permission,proto3" json:"permission,omitempty"`
	HideInMenu      bool    `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	IgnoreKeepAlive bool    `protobuf:"varint,12,opt,name=ignoreKeepAlive,proto3" json:"ignoreKeepAlive,omitempty"`
	LinkFlag        bool    `protobuf:"varint,13,opt,name=linkFlag,proto3" json:"linkFlag,omitempty"`
	Link            string  `protobuf:"bytes,14,opt,name=link,proto3" json:"link,omitempty"`
	Disabled        bool    `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
	SelectApi       []int64 `protobuf:"varint,16,rep,packed,name=selectApi,proto3" json:"selectApi,omitempty"`
}

func (x *UpdateMenuReq) Reset() {
	*x = UpdateMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuReq) ProtoMessage() {}

func (x *UpdateMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMenuReq) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *UpdateMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMenuReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateMenuReq) GetParentMenuId() int64 {
	if x != nil {
		return x.ParentMenuId
	}
	return 0
}

func (x *UpdateMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMenuReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *UpdateMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateMenuReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *UpdateMenuReq) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *UpdateMenuReq) GetIgnoreKeepAlive() bool {
	if x != nil {
		return x.IgnoreKeepAlive
	}
	return false
}

func (x *UpdateMenuReq) GetLinkFlag() bool {
	if x != nil {
		return x.LinkFlag
	}
	return false
}

func (x *UpdateMenuReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *UpdateMenuReq) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *UpdateMenuReq) GetSelectApi() []int64 {
	if x != nil {
		return x.SelectApi
	}
	return nil
}

type UpdateMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMenuResp) Reset() {
	*x = UpdateMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuResp) ProtoMessage() {}

func (x *UpdateMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuResp.ProtoReflect.Descriptor instead.
func (*UpdateMenuResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{20}
}

type DeleteMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
}

func (x *DeleteMenuReq) Reset() {
	*x = DeleteMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuReq) ProtoMessage() {}

func (x *DeleteMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuReq.ProtoReflect.Descriptor instead.
func (*DeleteMenuReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteMenuReq) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type DeleteMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMenuResp) Reset() {
	*x = DeleteMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuResp) ProtoMessage() {}

func (x *DeleteMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuResp.ProtoReflect.Descriptor instead.
func (*DeleteMenuResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{22}
}

type MenuInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
}

func (x *MenuInfoReq) Reset() {
	*x = MenuInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoReq) ProtoMessage() {}

func (x *MenuInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoReq.ProtoReflect.Descriptor instead.
func (*MenuInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{23}
}

func (x *MenuInfoReq) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type MenuInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId          int64   `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuType        string  `protobuf:"bytes,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	Title           string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Sort            int32   `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	ParentMenuId    int64   `protobuf:"varint,5,opt,name=parentMenuId,proto3" json:"parentMenuId,omitempty"`
	Icon            string  `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Name            string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Component       string  `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	Path            string  `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	Permission      string  `protobuf:"bytes,10,opt,name=permission,proto3" json:"permission,omitempty"`
	HideInMenu      bool    `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	IgnoreKeepAlive bool    `protobuf:"varint,12,opt,name=ignoreKeepAlive,proto3" json:"ignoreKeepAlive,omitempty"`
	LinkFlag        bool    `protobuf:"varint,13,opt,name=linkFlag,proto3" json:"linkFlag,omitempty"`
	Link            string  `protobuf:"bytes,14,opt,name=link,proto3" json:"link,omitempty"`
	Disabled        bool    `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
	SelectApi       []int64 `protobuf:"varint,16,rep,packed,name=selectApi,proto3" json:"selectApi,omitempty"`
}

func (x *MenuInfoResp) Reset() {
	*x = MenuInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoResp) ProtoMessage() {}

func (x *MenuInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoResp.ProtoReflect.Descriptor instead.
func (*MenuInfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{24}
}

func (x *MenuInfoResp) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *MenuInfoResp) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *MenuInfoResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuInfoResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuInfoResp) GetParentMenuId() int64 {
	if x != nil {
		return x.ParentMenuId
	}
	return 0
}

func (x *MenuInfoResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuInfoResp) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuInfoResp) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *MenuInfoResp) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *MenuInfoResp) GetIgnoreKeepAlive() bool {
	if x != nil {
		return x.IgnoreKeepAlive
	}
	return false
}

func (x *MenuInfoResp) GetLinkFlag() bool {
	if x != nil {
		return x.LinkFlag
	}
	return false
}

func (x *MenuInfoResp) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *MenuInfoResp) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *MenuInfoResp) GetSelectApi() []int64 {
	if x != nil {
		return x.SelectApi
	}
	return nil
}

type ListMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMenuReq) Reset() {
	*x = ListMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuReq) ProtoMessage() {}

func (x *ListMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuReq.ProtoReflect.Descriptor instead.
func (*ListMenuReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{25}
}

type ListMenuData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId          int64  `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	MenuType        string `protobuf:"bytes,2,opt,name=menuType,proto3" json:"menuType,omitempty"`
	Title           string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Sort            int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	ParentMenuId    int64  `protobuf:"varint,5,opt,name=parentMenuId,proto3" json:"parentMenuId,omitempty"`
	Icon            string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Name            string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Component       string `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
	Path            string `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	Permission      string `protobuf:"bytes,10,opt,name=permission,proto3" json:"permission,omitempty"`
	HideInMenu      bool   `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	IgnoreKeepAlive bool   `protobuf:"varint,12,opt,name=ignoreKeepAlive,proto3" json:"ignoreKeepAlive,omitempty"`
	LinkFlag        bool   `protobuf:"varint,13,opt,name=linkFlag,proto3" json:"linkFlag,omitempty"`
	Link            string `protobuf:"bytes,14,opt,name=link,proto3" json:"link,omitempty"`
	Disabled        bool   `protobuf:"varint,15,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *ListMenuData) Reset() {
	*x = ListMenuData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuData) ProtoMessage() {}

func (x *ListMenuData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuData.ProtoReflect.Descriptor instead.
func (*ListMenuData) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{26}
}

func (x *ListMenuData) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ListMenuData) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *ListMenuData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListMenuData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ListMenuData) GetParentMenuId() int64 {
	if x != nil {
		return x.ParentMenuId
	}
	return 0
}

func (x *ListMenuData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ListMenuData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMenuData) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *ListMenuData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListMenuData) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *ListMenuData) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *ListMenuData) GetIgnoreKeepAlive() bool {
	if x != nil {
		return x.IgnoreKeepAlive
	}
	return false
}

func (x *ListMenuData) GetLinkFlag() bool {
	if x != nil {
		return x.LinkFlag
	}
	return false
}

func (x *ListMenuData) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ListMenuData) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type ListMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ListMenuData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMenuResp) Reset() {
	*x = ListMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuResp) ProtoMessage() {}

func (x *ListMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuResp.ProtoReflect.Descriptor instead.
func (*ListMenuResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{27}
}

func (x *ListMenuResp) GetData() []*ListMenuData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{28}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{29}
}

func (x *LoginResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type InfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *InfoReq) Reset() {
	*x = InfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReq) ProtoMessage() {}

func (x *InfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReq.ProtoReflect.Descriptor instead.
func (*InfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{30}
}

func (x *InfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type InfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   string   `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Roles    []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	UserId   string   `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Desc     string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	HomePath string   `protobuf:"bytes,6,opt,name=homePath,proto3" json:"homePath,omitempty"`
}

func (x *InfoResp) Reset() {
	*x = InfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_sys_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResp) ProtoMessage() {}

func (x *InfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_sys_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResp.ProtoReflect.Descriptor instead.
func (*InfoResp) Descriptor() ([]byte, []int) {
	return file_rpc_sys_sys_proto_rawDescGZIP(), []int{31}
}

func (x *InfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *InfoResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *InfoResp) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *InfoResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *InfoResp) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

var File_rpc_sys_sys_proto protoreflect.FileDescriptor

var file_rpc_sys_sys_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x80,
	0x01, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x69, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3d, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x12,
	0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70,
	0x69, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xa7, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x0a, 0x41, 0x70, 0x69,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x0b, 0x41,
	0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70,
	0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a,
	0x0b, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0d, 0x0a,
	0x0b, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0xf6, 0x01, 0x0a,
	0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa4, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b,
	0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0xbf, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0xbe,
	0x03, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x22,
	0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x22, 0xa0,
	0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x3b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42,
	0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x21, 0x0a, 0x07, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x32, 0x80, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x69, 0x12, 0x15, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70,
	0x69, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x69, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc7, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64,
	0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x70, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x32, 0xc7, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x32, 0x76, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x79, 0x73, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_sys_sys_proto_rawDescOnce sync.Once
	file_rpc_sys_sys_proto_rawDescData = file_rpc_sys_sys_proto_rawDesc
)

func file_rpc_sys_sys_proto_rawDescGZIP() []byte {
	file_rpc_sys_sys_proto_rawDescOnce.Do(func() {
		file_rpc_sys_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_sys_sys_proto_rawDescData)
	})
	return file_rpc_sys_sys_proto_rawDescData
}

var file_rpc_sys_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_rpc_sys_sys_proto_goTypes = []any{
	(*InitApiRouteData)(nil), // 0: sysclient.InitApiRouteData
	(*InitApiReq)(nil),       // 1: sysclient.InitApiReq
	(*InitApiResp)(nil),      // 2: sysclient.InitApiResp
	(*ApiInfo)(nil),          // 3: sysclient.ApiInfo
	(*ApiListReq)(nil),       // 4: sysclient.ApiListReq
	(*ApiListResp)(nil),      // 5: sysclient.ApiListResp
	(*DeptAddReq)(nil),       // 6: sysclient.DeptAddReq
	(*DeptAddResp)(nil),      // 7: sysclient.DeptAddResp
	(*DeptUpdateReq)(nil),    // 8: sysclient.DeptUpdateReq
	(*DeptUpdateResp)(nil),   // 9: sysclient.DeptUpdateResp
	(*DeptDeleteReq)(nil),    // 10: sysclient.DeptDeleteReq
	(*DeptDeleteResp)(nil),   // 11: sysclient.DeptDeleteResp
	(*DeptInfoReq)(nil),      // 12: sysclient.DeptInfoReq
	(*DeptInfoResp)(nil),     // 13: sysclient.DeptInfoResp
	(*DeptListReq)(nil),      // 14: sysclient.DeptListReq
	(*DeptListData)(nil),     // 15: sysclient.DeptListData
	(*DeptListResp)(nil),     // 16: sysclient.DeptListResp
	(*AddMenuReq)(nil),       // 17: sysclient.AddMenuReq
	(*AddMenuResp)(nil),      // 18: sysclient.AddMenuResp
	(*UpdateMenuReq)(nil),    // 19: sysclient.UpdateMenuReq
	(*UpdateMenuResp)(nil),   // 20: sysclient.UpdateMenuResp
	(*DeleteMenuReq)(nil),    // 21: sysclient.DeleteMenuReq
	(*DeleteMenuResp)(nil),   // 22: sysclient.DeleteMenuResp
	(*MenuInfoReq)(nil),      // 23: sysclient.MenuInfoReq
	(*MenuInfoResp)(nil),     // 24: sysclient.MenuInfoResp
	(*ListMenuReq)(nil),      // 25: sysclient.ListMenuReq
	(*ListMenuData)(nil),     // 26: sysclient.ListMenuData
	(*ListMenuResp)(nil),     // 27: sysclient.ListMenuResp
	(*LoginReq)(nil),         // 28: sysclient.LoginReq
	(*LoginResp)(nil),        // 29: sysclient.loginResp
	(*InfoReq)(nil),          // 30: sysclient.InfoReq
	(*InfoResp)(nil),         // 31: sysclient.InfoResp
}
var file_rpc_sys_sys_proto_depIdxs = []int32{
	0,  // 0: sysclient.InitApiReq.list:type_name -> sysclient.InitApiRouteData
	3,  // 1: sysclient.ApiListResp.data:type_name -> sysclient.ApiInfo
	15, // 2: sysclient.DeptListResp.data:type_name -> sysclient.DeptListData
	26, // 3: sysclient.ListMenuResp.data:type_name -> sysclient.ListMenuData
	1,  // 4: sysclient.ApiService.InitApi:input_type -> sysclient.InitApiReq
	4,  // 5: sysclient.ApiService.ListApi:input_type -> sysclient.ApiListReq
	6,  // 6: sysclient.DeptService.DeptAdd:input_type -> sysclient.DeptAddReq
	8,  // 7: sysclient.DeptService.DeptUpdate:input_type -> sysclient.DeptUpdateReq
	10, // 8: sysclient.DeptService.DeptDelete:input_type -> sysclient.DeptDeleteReq
	12, // 9: sysclient.DeptService.DeptInfo:input_type -> sysclient.DeptInfoReq
	14, // 10: sysclient.DeptService.DeptList:input_type -> sysclient.DeptListReq
	17, // 11: sysclient.MenuService.AddMenu:input_type -> sysclient.AddMenuReq
	19, // 12: sysclient.MenuService.UpdateMenu:input_type -> sysclient.UpdateMenuReq
	21, // 13: sysclient.MenuService.DeleteMenu:input_type -> sysclient.DeleteMenuReq
	23, // 14: sysclient.MenuService.MenuInfo:input_type -> sysclient.MenuInfoReq
	25, // 15: sysclient.MenuService.ListMenu:input_type -> sysclient.ListMenuReq
	28, // 16: sysclient.UserService.Login:input_type -> sysclient.LoginReq
	30, // 17: sysclient.UserService.UserInfo:input_type -> sysclient.InfoReq
	2,  // 18: sysclient.ApiService.InitApi:output_type -> sysclient.InitApiResp
	5,  // 19: sysclient.ApiService.ListApi:output_type -> sysclient.ApiListResp
	7,  // 20: sysclient.DeptService.DeptAdd:output_type -> sysclient.DeptAddResp
	9,  // 21: sysclient.DeptService.DeptUpdate:output_type -> sysclient.DeptUpdateResp
	11, // 22: sysclient.DeptService.DeptDelete:output_type -> sysclient.DeptDeleteResp
	13, // 23: sysclient.DeptService.DeptInfo:output_type -> sysclient.DeptInfoResp
	16, // 24: sysclient.DeptService.DeptList:output_type -> sysclient.DeptListResp
	18, // 25: sysclient.MenuService.AddMenu:output_type -> sysclient.AddMenuResp
	20, // 26: sysclient.MenuService.UpdateMenu:output_type -> sysclient.UpdateMenuResp
	22, // 27: sysclient.MenuService.DeleteMenu:output_type -> sysclient.DeleteMenuResp
	24, // 28: sysclient.MenuService.MenuInfo:output_type -> sysclient.MenuInfoResp
	27, // 29: sysclient.MenuService.ListMenu:output_type -> sysclient.ListMenuResp
	29, // 30: sysclient.UserService.Login:output_type -> sysclient.loginResp
	31, // 31: sysclient.UserService.UserInfo:output_type -> sysclient.InfoResp
	18, // [18:32] is the sub-list for method output_type
	4,  // [4:18] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_sys_sys_proto_init() }
func file_rpc_sys_sys_proto_init() {
	if File_rpc_sys_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_sys_sys_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*InitApiRouteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InitApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*InitApiResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ApiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ApiListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeptAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeptAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeptUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeptUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeptDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeptDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeptInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeptInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeptListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AddMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*AddMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*MenuInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*MenuInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ListMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ListMenuData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ListMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*InfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_sys_sys_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*InfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_sys_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_rpc_sys_sys_proto_goTypes,
		DependencyIndexes: file_rpc_sys_sys_proto_depIdxs,
		MessageInfos:      file_rpc_sys_sys_proto_msgTypes,
	}.Build()
	File_rpc_sys_sys_proto = out.File
	file_rpc_sys_sys_proto_rawDesc = nil
	file_rpc_sys_sys_proto_goTypes = nil
	file_rpc_sys_sys_proto_depIdxs = nil
}
