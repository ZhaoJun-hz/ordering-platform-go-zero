// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package handler

import (
	"net/http"

	sysapi "ordering-platform/api/admin/internal/handler/sys/api"
	sysmenu "ordering-platform/api/admin/internal/handler/sys/menu"
	sysuser "ordering-platform/api/admin/internal/handler/sys/user"
	"ordering-platform/api/admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 初始化api
				Method:  http.MethodGet,
				Path:    "/initapi",
				Handler: sysapi.InitApiHandler(serverCtx),
			},
			{
				// 查询 api 列表
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: sysapi.ApiListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/sys/api"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthCheckRole, serverCtx.PermissionAction},
			[]rest.Route{
				{
					// 添加menu
					Method:  http.MethodPost,
					Path:    "/",
					Handler: sysmenu.AddMenuHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: sysmenu.ListMenuHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/:menuId",
					Handler: sysmenu.UpdateMenuHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/:menuId",
					Handler: sysmenu.DeleteMenuHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:menuId",
					Handler: sysmenu.MenuInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/sys/menu"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthCheckRole, serverCtx.PermissionAction},
			[]rest.Route{
				{
					// 获取用户权限码
					Method:  http.MethodGet,
					Path:    "/codes",
					Handler: sysuser.UserCodesHandler(serverCtx),
				},
				{
					// 获取用户信息
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: sysuser.UserInfoHandler(serverCtx),
				},
				{
					// 获取用户菜单
					Method:  http.MethodGet,
					Path:    "/menus",
					Handler: sysuser.UserMenusHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/sys/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/api/sys/user/login",
				Handler: sysuser.UserLoginHandler(serverCtx),
			},
		},
	)
}
